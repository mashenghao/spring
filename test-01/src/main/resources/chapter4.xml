<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="userService" class="bean.UserServiceImpl"></bean>
	<bean id="orderService" class="bean.OrderServiceImpl"></bean>

	<!--两个通知，配置到Spring容器中-->
	<bean id="logArgsAdvice" class="chapter4_aop1.LogArgsAdvice"></bean>
	<bean id="logResultAdvice" class="chapter4_aop1.LogResultAdvice"></bean>

	<!--配置用户服务的代理类,用ProxyFactoryBean生成组件-->
	<bean id="userServicePorxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<!--传入被代理类的接口，对于实现代理原理，是实现被代理类的接口，新生成一个类，这里就是-->
		<property name="proxyInterfaces">
			<list>
				<value>bean.UserService</value>
			</list>
		</property>
		<!--被代理对象。-->
		<property name="target" ref="userService"></property>

		<!--配置拦截器，这里可以使advice，advisor和interceptor-->
		<property name="interceptorNames">
			<list>
				<!--<value>logArgsAdvice</value>
				<value>logResultAdvice</value>-->
				<!--换成advisor-->
				<value>logCreateAdvisor</value>
			</list>
		</property>
	</bean>

	<!--Advisor 用于指定匹配那些方法需要被增强,这是切点,该部分的作用就是匹配方法，匹配成功，调用内部的advice去实现增强。-->
	<bean id="logCreateAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="logArgsAdvice"></property>
		<property name="mappedNames" value="createUser,createOrder"></property>
	</bean>

	<!--
	////////////////////////////
		按照上面的方式，实现OrderService的增强
	///////////////////////////
	-->
</beans>